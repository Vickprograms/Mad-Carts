"""Initial migration with role column

Revision ID: f10e99aba4f4
Revises: 
Create Date: 2025-06-28 03:23:58.531322

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f10e99aba4f4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deliveries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('driver_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('delivery_notes', sa.Text(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('recentsearches')
    op.drop_table('recentvisits')
    op.drop_table('orderitems')
    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'products', ['product_id'], ['id'])

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('orders_delivery_driver_id_fkey'), type_='foreignkey')
        batch_op.drop_column('received_at')
        batch_op.drop_column('delivery_driver_id')
        batch_op.drop_column('payment_method')
        batch_op.drop_column('delivery_date')
        batch_op.drop_column('pickup_location')
        batch_op.drop_column('condition')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('role')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('condition', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('pickup_location', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('delivery_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('delivery_driver_id', sa.UUID(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('received_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('orders_delivery_driver_id_fkey'), 'users', ['delivery_driver_id'], ['id'])

    with op.batch_alter_table('order_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    op.create_table('orderitems',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('orderitems_order_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('orderitems_product_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('orderitems_pkey'))
    )
    op.create_table('recentvisits',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('visited_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('recentvisits_product_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('recentvisits_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('recentvisits_pkey'))
    )
    op.create_table('recentsearches',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_term', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('searched_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('recentsearches_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('recentsearches_pkey'))
    )
    op.drop_table('deliveries')
    # ### end Alembic commands ###
